[package]
name = "oxidd-ffi"
version = "0.8.1"
edition = "2021"
description = "Foreign function interface for OxiDD"
readme = "../../README.md"

authors.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true

publish = false


[lib]
crate-type = ["cdylib", "staticlib"]


[dependencies]
oxidd-core = { workspace = true }
oxidd-dump = { workspace = true, features = ["dddmp", "dot"] }
oxidd = { workspace = true, features = ["bdd", "bcdd", "zbdd"] }

# fast hash function
#
# Note that there is a performance regression with 2.0, see
# https://github.com/rust-lang/rustc-hash/issues/45
rustc-hash = "1.1"


[features]
default = ["manager-index", "multi-threading", "apply-cache-direct-mapped"]

## Use multi-threaded implementations of the apply algorithm
multi-threading = ["oxidd/multi-threading"]

## Use the index-based manager implementation
##
## This implementation is generally faster than the pointer-based
## implementation, but is more restricted: There is no possibility to reserve
## space for more nodes after the initial allocation and the total number of
## nodes is limited to 2³² nodes for BDDs/ZBDDs, or 2³¹ nodes for BCDDs.
manager-index = ["oxidd/manager-index"]

## Use the pointer-based manager implementation (suitable for BDDs/ZBDDs with
## more than 2³² nodes, or BCDDs with more than 2³¹ nodes)
##
## If both `manager-index` and `manager-pointer` are specified, the
## pointer-based implementation will be used.
manager-pointer = ["oxidd/manager-pointer"]

## Enable the direct mapped apply cache
apply-cache-direct-mapped = ["oxidd/apply-cache-direct-mapped"]
